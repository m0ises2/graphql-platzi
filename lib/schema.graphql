type Course {
    _id: ID!,
    title: String!,
    teacher: String,
    description: String!,
    topic: String
}

type Student {
    _id: ID!
    name: String!
    email: String!
}

type Query {
    "Get an array of courses"
    getCourses: [Course]
    
    "Devuelve un solo curso"
    getCourse(id: ID!): Course

    "Get an array of students"
    getStudents: [Student]

    "Get a single student by ID"
    getStudent(id: ID!): Student

    "Retorna un saludo al mundo"
    hello(variable1: String): String

    "Retorna un saludo a ti directamente"
    saludo: String

    "Te dice la edad"
    age: Int
}

input courseInput {
    title: String!,
    teacher: String,
    description: String!,
    topic: String
}

input courseEditInput {
    _id: ID,
    title: String,
    teacher: String,
    description: String,
    topic: String
}


input studentInput {
    name: String
    email: String
}

type Mutation {
    "Create a course"
    createCourse(input: courseInput!): Course

    "Edit a Course"
    editCourse(id: ID!, input: courseEditInput!): Course

    "Create a student"
    createStudent(input: studentInput!): Student
}
