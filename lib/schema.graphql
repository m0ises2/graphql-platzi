"valida los tipos de nivel"
enum level {
    principiante
    intermedio
    avanzado
}

type Course {
    _id: ID!,
    title: String!,
    teacher: String,
    description: String!,
    topic: String @deprecated,
    people: [Person]
    level: level
}

interface Person {
    _id: ID!
    name: String!
    email: String!
}

type Student implements Person{
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person{
    _id: ID!
    name: String!
    email: String!
    phone: String
}

union GlobalSearch = Course | Student | Monitor

type Query {
    "Get an array of courses"
    getCourses: [Course]
    
    "Devuelve un solo curso"
    getCourse(id: ID!): Course

    "Get an array of students"
    getPeople: [Person]

    "Get a single student by ID"
    getPerson(id: ID!): Person

    "Retorna un saludo al mundo"
    hello(variable1: String): String

    "Retorna un saludo a ti directamente"
    saludo: String

    "Te dice la edad"
    age: Int

    "Ejecuta una busqueda Global"
    searchItems(keyword: String!): [GlobalSearch]
}

input courseInput {
    title: String!,
    teacher: String,
    description: String!,
    topic: String
    level: level
}

input courseEditInput {
    _id: ID,
    title: String,
    teacher: String,
    description: String,
    topic: String
}

input personInput {
    name: String
    email: String
    phone: String
    avatar: String
}

input personEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

type Mutation {
    "Create a course"
    createCourse(input: courseInput!): Course

    "Edit a Course"
    editCourse(id: ID!, input: courseEditInput!): Course

    "Delete a Course"
    deleteCourse(id: ID!): Course

    "Create a Person"
    createPerson(input: personInput!): Person

    "Edit a Person"
    editPerson(id: ID!, input: personEditInput!): Student
    
    "Delete a Course"
    deletePerson(id: ID!): Student

    "Add a student to a course"
    addPeople(courseId: ID!, personId: ID!): Course
}
